<?php
/**
 *  This file is part of the BlackfyreStudio CRUD package which is a recreation of the Krafthaus Bauhaus package.
 *  Copyright (C) 2016. Galicz MiklÃ³s <galicz.miklos@blackfyre.ninja>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

namespace DummyRootNamespaceHttp\Controllers\Crud;

use BlackfyreStudio\CRUD\Master;
use BlackfyreStudio\CRUD\Planner\FilterPlanner;
use BlackfyreStudio\CRUD\Planner\FormPlanner;
use BlackfyreStudio\CRUD\Planner\IndexPlanner;
use BlackfyreStudio\CRUD\Planner\ScopePlanner;

/**
 * Class GalleryItemController
 * @package DummyRootNamespaceHttp\Controllers\Crud
 */
class DummyClass extends Master
{

    /**
     * This function is called when configuring the list view.
     * @param IndexPlanner $planner
     */
    public function indexView(IndexPlanner $planner)
    {
        $planner->identifier('id');
    }

    /**
     * This function is called when configuring the form view.
     * @param FormPlanner $planner
     */
    public function formView(FormPlanner $planner)
    {

    }

    /**
     * This function is called when configuring the filter view.
     * @param FilterPlanner $planner
     */
    public function filters(FilterPlanner $planner)
    {

    }

    /**
     * This function is called when configuring the scope view.
     * @param ScopePlanner $planner
     */
    public function scopes(ScopePlanner $planner)
    {

    }

}